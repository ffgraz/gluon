#!/usr/bin/lua

local uci = require('simple-uci').cursor()
local site = require "gluon.site"
local wireless = require 'gluon.wireless'

-- NOTE: stuff in here is idempotent as those are list entries with an id associated
-- TODO: add *all* the rules we need, plus additional zones if necesarrry
-- FIXME: firewall rules are currently broken, there's only mesh / wired_mesh zone, need to ensure they are properly assigned

-- add jsoninfo
uci:section('olsrd', 'LoadPlugin', 'jsoninfo', {
	library = 'olsrd_jsoninfo.so.1.1',
	ignore = 0,
})

uci:section('firewall', 'rule', 'allow_olsr_mesh', {
	src = 'mesh',
	dest_port = '698',
	proto = 'udp',
	target = 'ACCEPT',
})

local fw = {
	wired_mesh = uci:get('firewall', 'wired_mesh', 'network'), -- these are preset by 300-firewall-rules
	mesh = {}, -- these aren't apparently
}

-- get all mesh radios and mesh lans and then add them to olsrd
-- TODO: code to cleanup leftover radios if needed?
wireless.foreach_radio(uci, function(radio, index, config)
	local radio_name = radio['.name']
	local intf = 'mesh_' .. radio_name
	table.insert(fw.mesh, intf)
end)

uci:section('olsrd', 'Interface', 'mesh', {
	interface = fw.mesh,
	Mode = 'mesh',
})
uci:set('firewall', 'mesh', 'network', fw.mesh)

-- TODO: does this make sense?
-- TODO: only if allow wan mesh is on
local wan_mesh = true

if wan_mesh then
	uci:section('olsrd', 'Interface', 'mesh_wan', {
		interface = { 'mesh_wan' },
		Mode = 'mesh',
	})
	uci:section('firewall', 'rule', 'allow_olsr_mesh_wan', {
		src = 'mesh_wan',
		dest_port = '698',
		proto = 'udp',
		target = 'ACCEPT',
	})
else
	uci:delete('firewall', 'allow_olsr_mesh_wan')
	uci:delete('olsrd', 'mesh_wan')
end

uci:section('olsrd', 'Interface', 'wired_mesh', {
	interface = fw.wired_mesh,
	Mode = 'mesh',
})
uci:section('firewall', 'rule', 'allow_olsr_wired_mesh', {
	src = 'wired_mesh',
	dest_port = '698',
	proto = 'udp',
	target = 'ACCEPT',
})


uci:save('olsrd')
uci:save('firewall')
uci:save('network')
