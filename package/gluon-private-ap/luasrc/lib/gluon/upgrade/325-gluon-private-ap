#!/usr/bin/lua

local uci = require("simple-uci").cursor()
local wireless = require 'gluon.wireless'

wireless.foreach_radio(uci, function(radio)
	local radio_name = radio['.name']
	local suffix = radio_name:match('^radio(%d+)$')
	local name   = "ap_" .. radio_name

	if not uci:get('wireless', name, 'device') then
		return
	end

	uci:set('wireless', name, 'ifname', suffix and 'ap' .. suffix)
end)

uci:set('network', 'globals', 'ula_prefix', uci:get('network_gluon-old', 'globals', 'ula_prefix'))

uci:section('network', 'interface', 'ap', {
	type = 'bridge',
	ifname = {},
	proto = 'static',
	ipaddr = uci:get('network_gluon-old', 'ap', 'ipaddr') or '192.168.178.1/24',
	ip6assign = '64',
	zone = 'ap',
})

uci:section('dhcp', 'dhcp', 'ap', {
	interface = 'ap',
	start = '100',
	limit = '150',
	leasetime = '12h',
})

uci:section('firewall', 'zone', 'ap', {
	name = 'ap',
	network = { 'ap' },
 	input = 'ACCEPT',
 	output = 'ACCEPT',
 	forward = 'ACCEPT'
})

uci:section('firewall', 'forwarding', 'afm', {
	src = 'ap',
	dest = 'mesh'
})

uci:save('firewall')
uci:save('network')
uci:save('dhcp')
uci:save('wireless')
